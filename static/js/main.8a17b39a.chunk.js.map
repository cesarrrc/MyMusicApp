{"version":3,"sources":["components/DashBoard.js","components/Header.js","components/Login.js","components/DynamicPage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","margin","input","DashBoard","props","classes","useState","online","setOnline","volume","setVolume","quality","setQuality","className","userName","style","display","justifyContent","marginTop","Card","CardContent","Typography","variant","classname","Switch","checked","onChange","event","target","name","inputProps","Grid","container","spacing","alignItems","item","xs","Slider","value","newValue","Input","Number","onBlur","disableUnderline","step","min","max","type","Select","labelId","id","MenuItem","theme","flexGrow","menuButton","marginRight","title","Header","anchorEl","setAnchorEl","handleClose","handleLogout","logout","AppBar","position","Toolbar","IconButton","onClick","currentTarget","edge","color","keepMounted","open","Boolean","onClose","loggedIn","textAlign","Button","Login","setUserName","setLoggedIn","user","Paper","elevation","height","flexDirection","fontSize","onSubmit","e","preventDefault","getInfo","console","log","TextField","required","fullWidth","label","InputLabelProps","marginBottom","DynamicPage","setUser","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a17b39a.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n    margin: \"auto\",\r\n  },\r\n  input: {\r\n    width: 42,    \r\n  },\r\n});\r\n\r\nconst DashBoard = (props) => {\r\n  const classes = useStyles();\r\n  const [online, setOnline] = useState(true)\r\n  const [volume, setVolume] = useState(30);\r\n  const [quality, setQuality] = useState(2);\r\n\r\n  \r\n  const handleChange = (event) => {\r\n    setOnline(event.target.checked);\r\n  };\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setVolume(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setVolume(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (volume < 0) {\r\n      setVolume(0);\r\n    } else if (volume > 100) {\r\n      setVolume(100);\r\n    }\r\n  };\r\n\r\n  const handleQualityChange = (event) => {\r\n    setQuality(event.target.value);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n\r\n      <div className=\"titleContainer\">\r\n        <p  className=\"intro\">\r\n          Hello,\r\n        </p>\r\n        <p className=\"nameIntro\">\r\n          {props.userName}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"mainContainer\" style={{display:\"flex\", justifyContent:\"center\", marginTop:\"20px\"}}>\r\n        \r\n        <Card className=\"cardContainer\">\r\n         \r\n          <CardContent>\r\n            <Typography variant=\"h5\">\r\n              Online Mode\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n              Is this Application currently connected to the internet?\r\n            </Typography>\r\n          </CardContent>\r\n         \r\n          <div classname=\"switchContainer\">\r\n            <Switch\r\n              checked={online}\r\n              onChange={handleChange}\r\n              name=\"online\"\r\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n            />\r\n          </div>\r\n          \r\n          <br />\r\n          {!online && \"Your application is offline. You won't be able to share or stream music to other devices.\"}\r\n        \r\n        </Card>\r\n        \r\n        {/**Music Volume Slider */}\r\n        <Card className=\"cardContainer\">\r\n            \r\n            <CardContent>\r\n              <Typography variant=\"h5\">\r\n                Master Volume\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                Overrides all other sound settings in this application.\r\n              </Typography>\r\n            </CardContent>\r\n            \r\n            <Grid container spacing={2} alignItems=\"center\">\r\n              \r\n              <Grid item>\r\n                <VolumeUp />\r\n              </Grid>\r\n              \r\n              <Grid item xs>\r\n                <Slider\r\n                  value={typeof volume === 'number' ? volume : 0}\r\n                  onChange={handleSliderChange}\r\n                  aria-labelledby=\"input-slider\"\r\n                  />\r\n              </Grid>\r\n              \r\n              <Grid item>\r\n                <Input\r\n                  className={classes.input}\r\n                  value={volume}\r\n                  margin=\"dense\"\r\n                  onChange={handleInputChange}\r\n                  onBlur={handleBlur}\r\n                  disableUnderline={true}\r\n                  inputProps={{\r\n                    step: 10,\r\n                    min: 0,\r\n                    max: 100,\r\n                    type: 'number',\r\n                    'aria-labelledby': 'input-slider',\r\n                  }}\r\n                  />\r\n              </Grid>\r\n            \r\n            </Grid>\r\n            \r\n            { volume > 80 && \"Listening to music at a high volume could cause long-term hearing loss.\"}\r\n        \r\n        </Card>\r\n        \r\n        <Card className=\"cardContainer\">\r\n          \r\n          <CardContent>\r\n            \r\n            <Typography variant=\"h5\">\r\n              Sound Quality\r\n            </Typography>\r\n            \r\n            <Typography variant=\"body1\">\r\n              Manually control the music quality in event of poor connection.\r\n            </Typography>\r\n          \r\n          </CardContent>\r\n        \r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={quality}\r\n            onChange={handleQualityChange}\r\n          >\r\n            <MenuItem value={1}>Low Quality</MenuItem>\r\n            <MenuItem value={2}>Normal Quality</MenuItem>\r\n            <MenuItem value={3}>High Quality</MenuItem>\r\n          </Select>\r\n          \r\n          <br />\r\n          {quality == 1 && \"Music quality is degraded. Increase quality if your connection allows it.\"}\r\n        \r\n        </Card>\r\n      \r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashBoard;\r\n","import { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  \r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    props.logout()\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        \r\n        <Toolbar>\r\n         \r\n          <IconButton onClick={handleClick} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n         \r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n         \r\n            <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleClose}>My account</MenuItem>\r\n            {props.loggedIn\r\n            ?<MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n            :<MenuItem onClick={handleClose}>Login</MenuItem>\r\n            }\r\n         \r\n          </Menu>\r\n          \r\n          <Typography variant=\"h6\" className={classes.title} style={{textAlign:\"left\"}}>\r\n            My Music App\r\n          </Typography>\r\n\r\n          {!props.loggedIn\r\n          ?<Button color=\"inherit\">Login</Button>\r\n          :<Button onClick={handleLogout} color=\"inherit\">Logout</Button>\r\n          }\r\n          \r\n        \r\n        </Toolbar>\r\n      \r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { useState } from 'react'; \r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst Login = (props) => {\r\n  const [userName, setUserName] = useState({userName:\"\"});\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  let user = {}\r\n\r\n  const handleInput = (e) => {\r\n    setUserName(e.target.value)\r\n  }\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault()\r\n    user.userName = userName\r\n    user.loggedIn = loggedIn\r\n    props.getInfo(user)\r\n    console.log(user)\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <Paper elevation={3}\r\n        style={{\r\n          width:\"400px\",\r\n          height: \"auto\",\r\n          display: 'flex',\r\n          flexDirection: \"column\",\r\n          margin: \"40px auto auto auto\",\r\n\r\n        }}\r\n      >\r\n        \r\n        <Typography variant=\"h4\" style={{margin:\"20px\", textAlign:\"center\"}}>\r\n          Welcome to MyMusicApp\r\n        </Typography>\r\n\r\n        <p style={{fontSize:\"20px\", margin:\"0 auto auto auto\"}}>\r\n          Login\r\n        </p>\r\n\r\n        <div style={{margin:\"40px\"}}>\r\n\r\n          <form onSubmit={handleLogin}>\r\n\r\n            <TextField required fullWidth onChange={handleInput} name=\"userName\" label=\"UserName\" inputProps={{style: {fontSize: 25}}} InputLabelProps={{style: {fontSize: 18}}}\r\n              style={{\r\n                marginBottom:\"30px\",\r\n              }}  \r\n            />\r\n\r\n            <TextField required fullWidth name=\"passWord\"  label=\"Password\" type=\"password\" inputProps={{style: {fontSize: 25}}} InputLabelProps={{style: {fontSize: 18}}}\r\n              style={{\r\n                marginBottom:\"30px\",\r\n              }}  \r\n            />\r\n\r\n            <Button onClick={()=>{setLoggedIn(true)}} type=\"submit\" variant=\"contained\" color=\"primary\" style={{display:\"flex\", margin:\"auto\"}}>Login</Button>\r\n\r\n         </form>\r\n         \r\n        </div>\r\n\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { useState } from 'react';\r\nimport DashBoard from './DashBoard';\r\nimport Header from './Header';\r\nimport Login from './Login';\r\n\r\n\r\nconst DynamicPage = () => {\r\n  const [user, setUser] = useState({userName:null, loggedIn:null});\r\n\r\n  const getUserInfo = (user) => {\r\n    setUser(user)\r\n    console.log('hello', user)\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    setUser({loggedIn:false})\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header loggedIn={user.loggedIn} logout={handleLogout}/>\r\n\r\n      {!user.loggedIn\r\n      ? <Login getInfo={getUserInfo} />\r\n      : <DashBoard userName={user.userName} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DynamicPage;\r\n","import './App.css';\nimport DynamicPage from './components/DynamicPage';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <DynamicPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}